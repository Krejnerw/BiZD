CREATE TABLE krejnerw.REGIONS(
    region_id NUMBER GENERATED BY DEFAULT AS IDENTITY,
    region_name VARCHAR2(50) NOT NULL,
    CONSTRAINT pk_region_id PRIMARY KEY(region_id)
    );
    
CREATE TABLE krejnerw.COUNTRIES(
    country_id NUMBER GENERATED BY DEFAULT AS IDENTITY,
    country_name VARCHAR2(50) NOT NULL,
    CONSTRAINT pk_country_id PRIMARY KEY(country_id)
    );

ALTER TABLE COUNTRIES
ADD (region_id NUMBER)
ADD CONSTRAINT fk_COUNTRIES_region_id
  FOREIGN KEY (region_id)
  REFERENCES REGIONS(region_id);
    
CREATE TABLE krejnerw.LOCATIONS(
    location_id NUMBER GENERATED BY DEFAULT AS IDENTITY,
    street_address VARCHAR2(50) NOT NULL,
    postal_code VARCHAR2(6) NOT NULL,
    city VARCHAR2(50) NOT NULL,
    state_province VARCHAR2(50) NOT NULL,
    country_id NUMBER,
    CONSTRAINT fk_LOCATIONS_country_id
        FOREIGN KEY(country_id) REFERENCES COUNTRIES(country_id),
    CONSTRAINT pk_location_id PRIMARY KEY(location_id)
    );
    
CREATE TABLE krejnerw.DEPARTMENTS(
    department_id NUMBER GENERATED BY DEFAULT AS IDENTITY,
    department_name VARCHAR2(50) NOT NULL,
    CONSTRAINT pk_department_id PRIMARY KEY(department_id)
    ); -- DONE - add by alter manager_id

ALTER TABLE DEPARTMENTS 
ADD (
manager_id NUMBER,
location_id NUMBER
);

ALTER TABLE DEPARTMENTS
ADD CONSTRAINT fk_DEPARTMENTS_location_id
  FOREIGN KEY (location_id)
  REFERENCES LOCATIONS(location_id);

CREATE TABLE krejnerw.JOBS(
    job_id NUMBER GENERATED BY DEFAULT AS IDENTITY,
    job_title VARCHAR2(50) NOT NULL,
    CONSTRAINT pk_job_id PRIMARY KEY(job_id)
    );

ALTER TABLE JOBS 
ADD (
min_salary FLOAT NOT NULL,
max_salary FLOAT NOT NULL
); -- DONE/CHECK - add check on min max

--CHECK(buy_price > 0)
ALTER TABLE JOBS
ADD CONSTRAINT positive_and_lower_than_max_check CHECK (min_salary > 0 AND min_salary<max_salary-2000);

ALTER TABLE JOBS
ADD CONSTRAINT positive_and_greater_than_min_check CHECK (min_salary > 0 AND max_salary>min_salary+2000);


CREATE TABLE krejnerw.EMPLOYEES(
    employee_id NUMBER GENERATED BY DEFAULT AS IDENTITY,
    first_name VARCHAR2(50) NOT NULL,
    last_name VARCHAR2(50) NOT NULL,
    email VARCHAR2(50) NOT NULL,
    phone_number VARCHAR2(12) NOT NULL,
    hire_date DATE NOT NULL,
    job_id NUMBER NOT NULL,
    manager_id NUMBER NOT NULL,
    salary NUMBER NOT NULL,
    commission_pct VARCHAR2(50) NOT NULL,
    department_id NUMBER,
    CONSTRAINT pk_employee_id PRIMARY KEY(employee_id),
    CONSTRAINT fk_EMPLOYEES_department_id
        FOREIGN KEY(department_id) REFERENCES DEPARTMENTS(department_id),
    CONSTRAINT fk_EMPLOYEES_job_id
        FOREIGN KEY(job_id) REFERENCES JOBS(job_id)
        );

ALTER TABLE DEPARTMENTS
ADD CONSTRAINT fk_DEPARTMENTS_manager_id
  FOREIGN KEY (manager_id)
  REFERENCES EMPLOYEES(employee_id);
  
ALTER TABLE krejnerw.EMPLOYEES
ADD CONSTRAINT fk_EMPLOYEES_manager_id
  FOREIGN KEY (manager_id)
  REFERENCES EMPLOYEES(employee_id);

CREATE TABLE krejnerw.JOB_HISTORY(
    employee_id NUMBER NOT NULL,
    start_date DATE NOT NULL,
    end_date DATE,
    job_id NUMBER NOT NULL,
    department_id NUMBER NOT NULL,
    CONSTRAINT pk_employee_id_start_date primary key (employee_id, start_date),
    CONSTRAINT fk_department_id
        FOREIGN KEY(department_id) REFERENCES DEPARTMENTS(department_id),
    CONSTRAINT fk_JOB_HISTORY_job_id
        FOREIGN KEY(job_id) REFERENCES JOBS(job_id),
    CONSTRAINT fk_JOB_HISTORY_employee_id
        FOREIGN KEY(employee_id) REFERENCES EMPLOYEES(employee_id)
        ); -- DONE - add primary key
       
  
INSERT INTO JOBS (JOB_TITLE, MIN_SALARY, MAX_SALARY)
VALUES ('title', 10,3020);

INSERT INTO JOBS (JOB_TITLE, MIN_SALARY, MAX_SALARY)
VALUES ('title', 10,110);

--DONE - drop table, czy mozna odzyskac? tak o ole ta opcja jest dostepna w konfiguracji bazy
CREATE TABLE krejnerw.TESTER(
    id NUMBER NOT NULL,
    x NUMBER NOT NULL,
    CONSTRAINT pk_testere primary key (id));
    
DROP TABLE TESTER;

FLASHBACK TABLE TESTER TO BEFORE DROP;